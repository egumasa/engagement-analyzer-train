[paths]
train = null
dev = null
vectors = null
init_tok2vec = null

[vars]
spans_key = null

[system]
gpu_allocator = "pytorch"
seed = 0

[nlp]
lang = "en"
pipeline = ["transformer","parser","tagger","ner","attribute_ruler","lemmatizer","trainable_transformer","spancat"]
batch_size = 64
disabled = []
before_creation = null
after_creation = null
after_pipeline_creation = null
tokenizer = {"@tokenizers":"spacy.Tokenizer.v1"}

[components]

[components.attribute_ruler]
source = "en_core_web_trf"
component = "attribute_ruler"

[components.lemmatizer]
source = "en_core_web_trf"
component = "lemmatizer"

[components.transformer]
source = "en_core_web_trf"
component = "transformer"

[components.parser]
source = "en_core_web_trf"
component = "parser"

[components.ner]
source = "en_core_web_trf"
component = "ner"

[components.tagger]
source = "en_core_web_trf"
component = "tagger"


[components.trainable_transformer]
factory = "transformer"
max_batch_items = 4096
set_extra_annotations = {"@annotation_setters":"spacy-transformers.null_annotation_setter.v1"}

[components.trainable_transformer.model]
@architectures = "spacy-transformers.TransformerModel.v1"
name = "egumasa/roberta-base-finetuned-academic"

[components.trainable_transformer.model.get_spans]
@span_getters = "spacy-transformers.strided_spans.v1"
window = 400
stride = 300

[components.trainable_transformer.model.tokenizer_config]
use_fast = true

[components.spancat]
factory = "spancat"
max_positive = null
spans_key = ${vars.spans_key}
threshold = 0.5

[components.spancat.model]
@architectures = "LSTM_SpanCategorizer.v1"
LSTMdepth = 2
LSTMdropout = 0.2

[components.spancat.model.reducer]
@layers = "mean_max_reducer.v1.5"
hidden_size = 384

[components.spancat.model.scorer]
@layers = "spacy.LinearLogistic.v1"
nO = null
nI = null

[components.spancat.model.tok2vec]
@architectures = "spacy-transformers.TransformerListener.v1"
grad_factor = 1.0
pooling = {"@layers":"reduce_mean.v1"}
upstream = "trainable_transformer"

[components.spancat.suggester]
@misc = "spacy-experimental.ngram_subtree_suggester.v1"
sizes = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]

[corpora]

[corpora.dev]
@readers = "spacy.Corpus.v1"
path = ${paths.dev}
max_length = 0
gold_preproc = false
limit = 0
augmenter = null

[corpora.train]
@readers = "spacy.Corpus.v1"
path = ${paths.train}
max_length = 2000
gold_preproc = false
limit = 0
augmenter = null

[training]
dev_corpus = "corpora.dev"
train_corpus = "corpora.train"
seed = ${system.seed}
gpu_allocator = ${system.gpu_allocator}
dropout = 0.1
accumulate_gradient = 5
patience = 5000
max_epochs = 0
max_steps = 20000
eval_frequency = 200
frozen_components = ["transformer","parser","tagger","ner","attribute_ruler","lemmatizer"]
annotating_components = ["parser"]
before_to_disk = null


[training.batcher]
@batchers = "spacy.batch_by_words.v1"
discard_oversize = false
tolerance = 0.2

[training.batcher.size]
@schedules = "compounding.v1"
start = 200
stop = 500
compound = 1.00005

[training.logger]
@loggers = "spacy.ConsoleLogger.v1"
progress_bar = true


[training.optimizer]
@optimizers = "Adam.v1"
beta1 = 0.9
beta2 = 0.999
L2_is_weight_decay = true
L2 = 0.01
grad_clip = 1.0
use_averages = false
eps = 0.00000001

[training.optimizer.learn_rate]
@schedules = "warmup_linear.v1"
warmup_steps = 2000
total_steps = 23000
initial_rate = 0.00003

[training.score_weights]
spans_sc_p = 0.0
spans_sc_r = 0.5
spans_sc_f = 0.5
dep_las_per_type = null
sents_p = null
sents_r = null
ents_per_type = null
tag_acc = null
dep_uas = null
dep_las = null
sents_f = null
ents_f = null
ents_p = null
ents_r = null
lemma_acc = null

[pretraining]

[initialize]
vectors = ${paths.vectors}
init_tok2vec = ${paths.init_tok2vec}
vocab_data = null
lookups = null
before_init = null
after_init = null

[initialize.components]

[initialize.tokenizer]
